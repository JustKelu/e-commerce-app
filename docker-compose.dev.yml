services:
  database:
    image: postgres:17
    container_name: ecommerce_db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data
  website-backend:
    build: 
      context: ./apps/website/backend
      dockerfile: Dockerfile.dev
    volumes:
      - ./apps/website/backend:/app
      - /app/node_modules
    command: ["npm", "run", "dev"]
    ports:
      - "5002:5000"
    depends_on:
      - database
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
  website-frontend:
    build: 
      context: ./apps/website/frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./apps/website/frontend:/app
      - /app/node_modules
    command: ["npm", "run", "dev", "--", "--host", "0.0.0.0"]
    ports:
      - "3000:3000"
  admin-backend:
    build: 
      context: ./apps/adminshell/backend
      dockerfile: Dockerfile.dev
    volumes:
      - ./apps/adminshell/backend:/app
      - /app/node_modules
    command: ["npm", "run", "dev"]
    ports:
      - "5001:5000"
    depends_on:
      - database
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
  admin-frontend:
    build: 
      context: ./apps/adminshell/frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./apps/adminshell/frontend:/app
      - /app/node_modules
    command: ["npm", "run", "dev", "--", "--host", "0.0.0.0"]
    ports:
      - "8081:8080"
volumes:
  postgres_data: